//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PriconneReTLInstaller.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.7.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
  <string>BepInEx\core</string>
  <string>BepInEx\plugins</string>
  <string>BepInEx\Translation</string>
  <string>dotnet</string>
  <string>.doorstop_version</string>
  <string>doorstop_config.ini</string>
  <string>winhttp.dll</string>
  <string>changelog.txt</string>
  <string>Version.txt</string>
  <string>ReTL_Updater.lnk</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection uninstallFiles {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["uninstallFiles"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
  <string>BepInEx/Translation/en/Text/_AutoGeneratedTranslations.txt</string>
  <string>BepInEx/Translation/en/Text/_Postprocessors.txt</string>
  <string>BepInEx/Translation/en/Text/_Preprocessors.txt</string>
  <string>BepInEx/Translation/en/Text/_Substitutions.txt</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection ignoreFiles {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["ignoreFiles"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
  <string>BepInEx/config/AutoTranslatorConfig.ini</string>
  <string>BepInEx/config/BepInEx.cfg</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection configFiles {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["configFiles"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("https://api.github.com/repos/ImaterialC/PriconneRe-TL")]
        public string githubApi {
            get {
                return ((string)(this["githubApi"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"How to use:

First / Fresh Install:
If you have never used the patch before, or you don't have it currently installed, just press the Start button, and the application will donwload and install the translation patch for you.
If you have config files left over from a previous installation, the application will keep those.

Update:
If you already have a version of the translation patch applied, just press the Start button, and the application will update it by comparing the latest with the currently applied version, and adding/removing/renaming the necessery files.
Important configuration files are not touched during this process.

Force Redownload / Reinstall:
If you check the ""Force Redownload"" option befor pressing the Start button, the application will delete the currently installed translation patch version, and donwload and install the latest release. It's like and Uninstall + Install
Force Redownload keeps the important config files untouched.

Uninstall:
If you check the ""Uninstall"" option before pressing the Start button, the application will remove the currently installed translation patch.
Depending on if you checked the ""Delete config files"" option, it will either keep or delete the important config files too.

By checking / unchecking the ""Show Logs"" option, you can view/hide a detailed progress/output log.
All the operations processed are always logged into the ReTLUpdater.log file in the application's folder, regardless of this option.")]
        public string helpText {
            get {
                return ((string)(this["helpText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\nInspired by https://github.com/touanu/PriconeTL_Updater\r\n\r\nAll assets used in t" +
            "his application are properties of CyberAgent, Inc., Cygames, Inc. / their respec" +
            "tive creators.")]
        public string aboutText {
            get {
                return ((string)(this["aboutText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Current Mode: Install")]
        public string installMode {
            get {
                return ((string)(this["installMode"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Installs the translation patch.\r\nKeeps the config files if already present.")]
        public string installModeDescription {
            get {
                return ((string)(this["installModeDescription"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Current Mode: Uninstall")]
        public string uninstallMode {
            get {
                return ((string)(this["uninstallMode"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Removes the translation patch files, but keeps any user files.")]
        public string uninstallModeDescription {
            get {
                return ((string)(this["uninstallModeDescription"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Current Mode: Force Redownload / Reinstall")]
        public string fredownloadMode {
            get {
                return ((string)(this["fredownloadMode"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Removes the translation patch, inculding the generated interop assemblies and the" +
            "n installs the latest version.\r\nKeeps config files.")]
        public string fredownloadModeDescription {
            get {
                return ((string)(this["fredownloadModeDescription"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Current Mode: Update")]
        public string updateMode {
            get {
                return ((string)(this["updateMode"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Updates the current translation patch installation by adding/removing/renaming fi" +
            "les compared to the current version.\r\nKeeps config files.")]
        public string updateModeDescription {
            get {
                return ((string)(this["updateModeDescription"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Current Mode: Disabled")]
        public string disabledMode {
            get {
                return ((string)(this["disabledMode"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Operation disabled due to an error.\r\nSee log for details.")]
        public string disabledModeDescription {
            get {
                return ((string)(this["disabledModeDescription"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Deletes config files.")]
        public string deleteConfigText {
            get {
                return ((string)(this["deleteConfigText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Keeps config files.")]
        public string keepConfigText {
            get {
                return ((string)(this["keepConfigText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Deletes ignored files.")]
        public string deleteIgnoredText {
            get {
                return ((string)(this["deleteIgnoredText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Keeps ignored files.")]
        public string keepIgnoredText {
            get {
                return ((string)(this["keepIgnoredText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Deletes interops.")]
        public string deleteInteropsText {
            get {
                return ((string)(this["deleteInteropsText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Keeps interops.")]
        public string keepInteropsText {
            get {
                return ((string)(this["keepInteropsText"]));
            }
        }
    }
}
